# Stage 1: Build service-b
FROM node:20-alpine AS builder

WORKDIR /app

# Install basic dependencies
RUN apk add --no-cache python3 build-base

# Copy package.json files
COPY package*.json ./
COPY apps/service-b/package*.json ./apps/service-b/
COPY libs/common/package*.json ./libs/common/

# Install dependencies
ENV CANVAS_PREBUILT=1
ENV npm_config_canvas_binary_host_mirror=https://github.com/Automattic/node-canvas/releases/download/
ENV npm_config_build_from_source=false
RUN npm install --legacy-peer-deps --no-optional

# Copy source code
COPY libs/common ./libs/common
COPY apps/service-b ./apps/service-b

# Create mock implementation dir
RUN mkdir -p apps/service-b/src/reports/mocks

# Create a simple mock implementation
RUN echo 'exports.MockChartJSNodeCanvas = class { \
  constructor() { console.log("Mock chart"); } \
  async renderToBuffer() { return Buffer.from([0]); } \
};' > apps/service-b/src/reports/mocks/mock-chart.js

# Compile TypeScript
RUN npx tsc -p apps/service-b/tsconfig.json

# Stage 2: Production image
FROM node:20-alpine

WORKDIR /app

# Install runtime dependencies only
RUN apk add --no-cache \
    cairo \
    pango \
    jpeg \
    giflib \
    pixman \
    fontconfig \
    freetype

# Copy package.json files
COPY production-package.json ./package.json
COPY apps/service-b/package*.json ./apps/service-b/
COPY libs/common/package*.json ./libs/common/

# Install production dependencies
ENV NODE_ENV=production
ENV CANVAS_PREBUILT=1
ENV npm_config_build_from_source=false
RUN npm install --production --legacy-peer-deps --no-optional --ignore-scripts

# Copy compiled JavaScript from builder stage
COPY --from=builder /app/libs/common/dist ./libs/common/dist
COPY --from=builder /app/apps/service-b/dist ./apps/service-b/dist

# Copy mock files
COPY --from=builder /app/apps/service-b/src/reports/mocks/mock-chart.js ./apps/service-b/dist/apps/service-b/src/reports/mocks/

# Create directories
RUN mkdir -p /app/reports

# Copy startup script
COPY build.sh /app/build.sh

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3001
ENV MONGODB_URI=mongodb://mongodb:27017
ENV MONGODB_DB=microservices
ENV REDIS_URI=redis://redis:6379
ENV MQTT_URI=mqtt://mosquitto:1883
ENV CANVAS_PREBUILT=1

# Expose port
EXPOSE 3001

# Start service
CMD ["/bin/sh", "/app/build.sh"]
